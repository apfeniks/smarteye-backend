services:
  postgres:
    image: postgres:16
    container_name: smarteye-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-smarteye}
      POSTGRES_USER: ${POSTGRES_USER:-smarteye}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-smarteye}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-smarteye} -d ${POSTGRES_DB:-smarteye}"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:latest
    container_name: smarteye-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID:-smarteye}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY:-smarteye_secret}
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 30

  minio-init:
    image: minio/mc:latest
    container_name: smarteye-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local http://minio:9000 ${S3_ACCESS_KEY_ID:-smarteye} ${S3_SECRET_ACCESS_KEY:-smarteye_secret} &&
      /usr/bin/mc mb -p local/${S3_BUCKET:-smarteye-clouds} || true &&
      /usr/bin/mc anonymous set download local/${S3_BUCKET:-smarteye-clouds} || true &&
      echo 'MinIO bucket initialized'
      "
    restart: "no"

  backend:
    build: .
    container_name: smarteye-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SERVER_PORT: ${SERVER_PORT:-8080}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:postgresql://postgres:5432/smarteye}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-smarteye}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-smarteye}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_BUCKET: ${S3_BUCKET:-smarteye-clouds}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-smarteye}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-smarteye_secret}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-true}
      CONVEYOR_OFFSET_BETWEEN_SCALES: ${CONVEYOR_OFFSET_BETWEEN_SCALES:-5}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully

volumes:
  pgdata:
  minio_data:
