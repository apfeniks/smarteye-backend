version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: se-postgres
    environment:
      POSTGRES_USER: se_user
      POSTGRES_PASSWORD: se_pass
      POSTGRES_DB: se_db
    ports:
      - "5432:5432"
    volumes:
      - se_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U se_user -d se_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: se-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: se-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"   # внутр. listener (контейнерная сеть)
      - "9094:9094"   # внешний для хоста Windows
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 10

  minio:
    image: minio/minio:latest
    container_name: se-minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: se_minio
      MINIO_ROOT_PASSWORD: se_minio_pass
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web-консоль
    volumes:
      - se_minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "mc ready local || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10

volumes:
  se_pg_data:
  se_minio_data:
